#!/bin/bash

# Prompt Compatible Colours
ps_orange="\[$(tput setaf 166)\]"
ps_yellow="\[$(tput setaf 11)\]"
ps_reset="\[$(tput sgr0)\]"

# Current working branch
function b {
  git symbolic-ref HEAD 2>/dev/null | awk -F/ {'print $NF'}
}

# Check whether a git pull is required
function git_check_pull {
  local local_branch=$(git rev-parse @)
  local remote_branch=$(git rev-parse @{u})
  local base_branch=$(git merge-base @ @{u})

  if [ ${local_branch} = ${remote_branch} ]; then
    return
  elif [ ${local_branch} = ${base_branch} ]; then
    echo "<pull required>"
  fi
}

# Check whether a commit is required and return branch
function git_check_branch {
  # Regular text Colours
  reset=$(tput sgr0)
  red=$(tput setaf 196)
  blue=$(tput setaf 27)
  light_green=$(tput setaf 77)

  if $(! git status -s &> /dev/null); then
    return
  else
    if [ "$(git status --porcelain)" == "" ]; then
      echo "${light_green}on $(b) ${blue}$(git_check_pull 2> /dev/null)${reset}"
    else
      echo "${red}on $(b)* ${blue}$(git_check_pull 2> /dev/null)${reset}"
    fi
  fi
}

export PS1="${ps_yellow}[\u]${ps_reset}@${ps_orange}\H${ps_reset}: \w \$(git_check_branch)\n$ "

unset ps_orange
unset ps_yellow
unset ps_reset
