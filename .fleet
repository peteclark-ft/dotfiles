#!/bin/bash

function fcauth {
  colours
  if [[ -z $1 ]]; then
    echo "${amber_status} Usage - fcauth [url]"
    cleanup_colours && return 1
  fi

  local credentials=$(ssh -t $1 'fleetctl ssh deployer etcdctl get /ft/_credentials/varnish/htpasswd' 2> /dev/null | sed -n 1'p' | tr ',' '\n')
  for credential in ${credentials}; do
    local username=$(echo ${credential} | cut -d: -f1)
    local password=$(echo ${credential} | cut -d: -f2)
    printf "%3s %s %-25s %s\n" "" "${pale_green}${orb}${reset}" ${username} ${password}
  done
  cleanup_colours
}

function auth {
  colours
  if [[ -z $1 ]]; then
    echo "${amber_status} Usage - auth [url]"
    cleanup_colours && return 1
  fi

  local credentials=$(ssh -t $1 'fleetctl ssh deployer etcdctl get /ft/_credentials/varnish/htpasswd' 2> /dev/null | sed -n 1'p' | tr ',' '\n')
  for credential in ${credentials}; do
    local username=$(echo ${credential} | cut -d: -f1)
    local password=$(echo ${credential} | cut -d: -f2)
    break
  done

  echo ${username}:${password}
  cleanup_colours
}

function balance {
  colours
  if [[ -z $1 ]]; then
    echo "${amber_status} Usage - balance [url]"
    cleanup_colours && return 1
  fi

  local machines=$(ssh -t $1 'fleetctl list-machines' 2> /dev/null | awk '{print $1}' | grep -v MACHINE | cut -d'.' -f1)
  for machine in ${machines}; do
    echo "${green_status} Machine: ${machine} Units: $(ssh -t $1 'fleetctl list-units | grep '$machine' | wc -l' 2> /dev/null)"
  done

  cleanup_colours
}

function fcssh {
  colours
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "${amber_status} Usage - fcssh [url] [service-name]"
    cleanup_colours && return 1
  fi

  echo "${green_status} Connecting to $1"
  ssh -t $1 'fleetctl ssh '$2
  cleanup_colours
}

function fctail {
  colours
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "${amber_status} Usage - fctail [url] [service-name] [:optional lines]"
    cleanup_colours && return 1
  fi

  local lines=${3:-200}

  echo "${green_status} Connecting to $1"
  ssh -t $1 'fleetctl journal -lines='$lines' -f '$2
  echo "${red_status} Closed connection to $1"
  cleanup_colours
}

function fcheck {
  colours
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "${amber_status} Usage - fcheck [url] [service-name]"
    cleanup_colours && return 1
  fi

  ssh -t $1 'fleetctl status '$2
  cleanup_colours
}

function fcs {
  colours
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "${amber_status} Usage - fcs [url] [service-name] [start/stop/status]"
    cleanup_colours && return 1
  fi

  ssh -t $1 'fleetctl '$3' '$2
  cleanup_colours
}

function coreos_version {
  colours
  if [[ -z $1 ]]; then
    echo "${amber_status} Usage - coreos [url]"
    cleanup_colours && return 1
  fi

  local machines=$(ssh -t $1 'fleetctl list-machines' 2> /dev/null | awk '{print $1}' | grep -v MACHINE | cut -d'.' -f1)
  for machine in ${machines}; do
    echo "${green_status} Machine ID: ${machine}"
    ssh -t $1 'fleetctl ssh '$machine' cat /etc/motd' 2> /dev/null | grep stable
    echo ""
  done
  cleanup_colours
}
