#!/bin/bash

function fcauth {
  colours
  if [[ -z $1 ]]; then
    echo "${amber_status} Usage - fcauth [url]"
    cleanup_colours && return 1
  fi

  local credentials=$(ssh -t $1 'fleetctl ssh deployer etcdctl get /ft/_credentials/varnish/htpasswd' 2> /dev/null | sed -n 1'p' | tr ',' '\n')
  for credential in ${credentials}; do
    echo ${pale_green}${orb}${reset} ${credential}
  done
  cleanup_colours
}

function fcssh {
  colours
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "${amber_status} Usage - fcssh [up-tunnel-url] [service-name]"
    cleanup_colours && return 1
  fi

  echo "${green_status} Connecting to $1"
  ssh -t $1 'fleetctl ssh '$2
  cleanup_colours
}

function fctail {
  colours
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "${amber_status} Usage - fctail [up-tunnel-url] [service-name] [:optional lines]"
    cleanup_colours && return 1
  fi

  local lines=${3:-200}

  echo "${green_status} Connecting to $1"
  ssh -t $1 'fleetctl journal -lines='$lines' -f '$2
  echo "${red_status} Closed connection to $1"
  cleanup_colours
}

function fcheck {
  colours
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "${amber_status} Usage - fcheck [up-tunnel-url] [service-name]"
    cleanup_colours && return 1
  fi

  ssh -t $1 'fleetctl status '$2
  cleanup_colours
}

function fcs {
  colours
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    echo "${amber_status} Usage - fcheck [up-tunnel-url] [service-name] [start/stop/status]"
    cleanup_colours && return 1
  fi

  ssh -t $1 'fleetctl '$3' '$2
  cleanup_colours
}
