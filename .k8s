#!/bin/bash

function get_kube_env {
   if [ -z $KUBECONFIG ]; then
      echo ""
   else
      local conf=${KUBECONFIG##*/}
      echo "k8s/${conf%-kubeconfig}"
   fi
}

function k8sauth {
   colours
   local k8s_env=$(get_kube_env)
   if [[ -z $k8s_env ]]; then
      echo "${amber_status} Please connect to K8S cluster, then usage - k8sauth"
      cleanup_colours && return 1
   fi

   kubectl get secrets varnish-auth -ojson | jq -r '.data.".htpasswd"'  | base64 -D
}

source <(kubectl completion bash)

alias pac-prod-eu="export KUBECONFIG=~/.kube/pac-prod-eu-kubeconfig"
alias pac-prod-us="export KUBECONFIG=~/.kube/pac-prod-us-kubeconfig"

alias pac-staging-eu="export KUBECONFIG=~/.kube/pac-staging-eu-kubeconfig"
alias pac-staging-us="export KUBECONFIG=~/.kube/pac-staging-us-kubeconfig"

alias delivery-dev-eu="export KUBECONFIG=~/.kube/upp-k8s-dev-delivery-eu-kubeconfig"
alias delivery-prod-eu="export KUBECONFIG=~/.kube/upp-prod-delivery-eu-kubeconfig"
alias delivery-prod-us="export KUBECONFIG=~/.kube/upp-prod-delivery-us-kubeconfig"

alias publish-dev-eu="export KUBECONFIG=~/.kube/upp-k8s-dev-publish-eu-kubeconfig"
alias publish-prod-eu="export KUBECONFIG=~/.kube/upp-prod-publish-eu-kubeconfig"

#alias delivery-pre-prod-eu="export KUBECONFIG=~/.kube/k8s-delivery-upp-kubeconfig"
alias pub-pre-prod-eu="export KUBECONFIG=~/.kube/k8s-publishing-upp-kubeconfig"

alias syskubectl='kubectl --namespace kube-system'
